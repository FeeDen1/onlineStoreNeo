{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [],\n  singleProduct: {},\n  numberOfProducts: 0\n};\nconst CartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const index = state.products.findIndex(cartEntry => cartEntry.id === newItem.id);\n      if (index !== -1) {\n        state.products[index].quantity++;\n      } else {\n        const newProduct = {\n          ...newItem,\n          quantity: 1\n        };\n        state.products.push(newProduct);\n      }\n      state.numberOfProducts++;\n    },\n    deleteAllCart(state) {\n      state.products = [];\n      state.numberOfProducts = 0;\n    },\n    deleteOneItem(state, action) {\n      const itemToDelete = action.payload;\n      const index = state.products.findIndex(item => item.id === itemToDelete.id);\n      if (index !== -1) {\n        state.numberOfProducts--;\n        state.products[index].quantity--;\n        if (state.products[index].quantity === 0) {\n          state.products.splice(index, 1);\n        }\n      }\n    },\n    deleteWholeItem(state, action) {\n      const itemToDelete = action.payload;\n      const index = state.products.findIndex(item => item.id === itemToDelete.id);\n      if (index !== -1) {\n        const updatedProduct = state.products[index];\n        state.numberOfProducts -= updatedProduct.quantity;\n        state.products.splice(index, 1);\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  deleteAllCart,\n  deleteOneItem,\n  deleteWholeItem\n} = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","singleProduct","numberOfProducts","CartSlice","name","reducers","addToCart","state","action","newItem","payload","index","findIndex","cartEntry","id","quantity","newProduct","push","deleteAllCart","deleteOneItem","itemToDelete","item","splice","deleteWholeItem","updatedProduct","actions","reducer"],"sources":["C:/Users/denis/WebstormProjects/onlineStoreNeo/src/store/cartManagement/CartSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IItem } from \"../../models/IItem\";\r\nimport { cartState } from \"./types\";\r\n\r\nconst initialState: cartState = {\r\n    products: [],\r\n    singleProduct: {} as IItem,\r\n    numberOfProducts: 0,\r\n}\r\n\r\nconst CartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        addToCart(state, action: PayloadAction<IItem>) {\r\n            const newItem = action.payload;\r\n            const index = state.products.findIndex(cartEntry => cartEntry.id === newItem.id);\r\n            if (index !== -1) {\r\n                state.products[index].quantity++;\r\n            } else {\r\n                const newProduct = { ...newItem, quantity: 1 };\r\n                state.products.push(newProduct);\r\n            }\r\n            state.numberOfProducts++;\r\n        },\r\n        deleteAllCart(state) {\r\n            state.products = [];\r\n            state.numberOfProducts = 0;\r\n        },\r\n        deleteOneItem(state, action: PayloadAction<IItem>) {\r\n            const itemToDelete = action.payload;\r\n            const index = state.products.findIndex(item => item.id === itemToDelete.id);\r\n            if (index !== -1) {\r\n                state.numberOfProducts--;\r\n                state.products[index].quantity--;\r\n\r\n                if (state.products[index].quantity === 0) {\r\n                    state.products.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n        deleteWholeItem(state, action: PayloadAction<IItem>) {\r\n            const itemToDelete = action.payload;\r\n            const index = state.products.findIndex(item => item.id === itemToDelete.id);\r\n            if (index !== -1) {\r\n                const updatedProduct = state.products[index];\r\n                state.numberOfProducts -= updatedProduct.quantity;\r\n                state.products.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addToCart, deleteAllCart, deleteOneItem, deleteWholeItem } = CartSlice.actions;\r\nexport default CartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,MAAMC,YAAuB,GAAG;EAC5BC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE,CAAC,CAAU;EAC1BC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAEC,MAA4B,EAAE;MAC3C,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,KAAK,GAAGJ,KAAK,CAACP,QAAQ,CAACY,SAAS,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAChF,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QACdJ,KAAK,CAACP,QAAQ,CAACW,KAAK,CAAC,CAACI,QAAQ,EAAE;MACpC,CAAC,MAAM;QACH,MAAMC,UAAU,GAAG;UAAE,GAAGP,OAAO;UAAEM,QAAQ,EAAE;QAAE,CAAC;QAC9CR,KAAK,CAACP,QAAQ,CAACiB,IAAI,CAACD,UAAU,CAAC;MACnC;MACAT,KAAK,CAACL,gBAAgB,EAAE;IAC5B,CAAC;IACDgB,aAAaA,CAACX,KAAK,EAAE;MACjBA,KAAK,CAACP,QAAQ,GAAG,EAAE;MACnBO,KAAK,CAACL,gBAAgB,GAAG,CAAC;IAC9B,CAAC;IACDiB,aAAaA,CAACZ,KAAK,EAAEC,MAA4B,EAAE;MAC/C,MAAMY,YAAY,GAAGZ,MAAM,CAACE,OAAO;MACnC,MAAMC,KAAK,GAAGJ,KAAK,CAACP,QAAQ,CAACY,SAAS,CAACS,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKM,YAAY,CAACN,EAAE,CAAC;MAC3E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QACdJ,KAAK,CAACL,gBAAgB,EAAE;QACxBK,KAAK,CAACP,QAAQ,CAACW,KAAK,CAAC,CAACI,QAAQ,EAAE;QAEhC,IAAIR,KAAK,CAACP,QAAQ,CAACW,KAAK,CAAC,CAACI,QAAQ,KAAK,CAAC,EAAE;UACtCR,KAAK,CAACP,QAAQ,CAACsB,MAAM,CAACX,KAAK,EAAE,CAAC,CAAC;QACnC;MACJ;IACJ,CAAC;IACDY,eAAeA,CAAChB,KAAK,EAAEC,MAA4B,EAAE;MACjD,MAAMY,YAAY,GAAGZ,MAAM,CAACE,OAAO;MACnC,MAAMC,KAAK,GAAGJ,KAAK,CAACP,QAAQ,CAACY,SAAS,CAACS,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKM,YAAY,CAACN,EAAE,CAAC;MAC3E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QACd,MAAMa,cAAc,GAAGjB,KAAK,CAACP,QAAQ,CAACW,KAAK,CAAC;QAC5CJ,KAAK,CAACL,gBAAgB,IAAIsB,cAAc,CAACT,QAAQ;QACjDR,KAAK,CAACP,QAAQ,CAACsB,MAAM,CAACX,KAAK,EAAE,CAAC,CAAC;MACnC;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,SAAS;EAAEY,aAAa;EAAEC,aAAa;EAAEI;AAAgB,CAAC,GAAGpB,SAAS,CAACsB,OAAO;AAC7F,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}