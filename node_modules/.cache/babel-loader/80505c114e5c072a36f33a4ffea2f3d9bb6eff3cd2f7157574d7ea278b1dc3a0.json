{"ast":null,"code":"import React from'react';import{Navigate,Route,Routes}from\"react-router-dom\";import{publicRoutes}from\"../routes/routes\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppRouter=()=>{return/*#__PURE__*/_jsxs(Routes,{children:[publicRoutes.map(route=>/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(route.component,{})},route.path)),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]});};export default AppRouter;","map":{"version":3,"names":["React","Navigate","Route","Routes","publicRoutes","jsx","_jsx","jsxs","_jsxs","AppRouter","children","map","route","path","element","component","to","replace"],"sources":["C:/Users/denis/WebstormProjects/onlineStoreNeo/src/components/AppRouter.tsx"],"sourcesContent":["import React, {FC} from 'react';\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {publicRoutes} from \"../routes/routes\";\r\n\r\nconst AppRouter: FC = () => {\r\n    return (\r\n        <Routes>\r\n            {publicRoutes.map((route) => (\r\n                <Route\r\n                    path={route.path}\r\n                    element={<route.component/>}\r\n                    key={route.path}\r\n                />\r\n            ))}\r\n            <Route\r\n                path=\"*\"\r\n                element={<Navigate to='/' replace/>}\r\n            />\r\n\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAY,OAAO,CAC/B,OAAQC,QAAQ,CAAEC,KAAK,CAAEC,MAAM,KAAO,kBAAkB,CACxD,OAAQC,YAAY,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,SAAa,CAAGA,CAAA,GAAM,CACxB,mBACID,KAAA,CAACL,MAAM,EAAAO,QAAA,EACFN,YAAY,CAACO,GAAG,CAAEC,KAAK,eACpBN,IAAA,CAACJ,KAAK,EACFW,IAAI,CAAED,KAAK,CAACC,IAAK,CACjBC,OAAO,cAAER,IAAA,CAACM,KAAK,CAACG,SAAS,GAAC,CAAE,EACvBH,KAAK,CAACC,IACd,CACJ,CAAC,cACFP,IAAA,CAACJ,KAAK,EACFW,IAAI,CAAC,GAAG,CACRC,OAAO,cAAER,IAAA,CAACL,QAAQ,EAACe,EAAE,CAAC,GAAG,CAACC,OAAO,MAAC,CAAE,CACvC,CAAC,EAEE,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}